

// Meta UI (v1.3.3)
// Meta UI is a custom base theme for the Bootstrap UI framework.

// How to use Meta UI with Sass
// To manually compile Sass using Sass, run;
// `$ sass src/styles/Custom.scss src/styles/Custom.css`

// Reboot

html {
  dd {
    margin-bottom: 1rem;
  }
}


// Color system
//

$gray-50:  #fafafa;
$gray-100: #f5f5f5;
$gray-200: #eeeeee;
$gray-300: #e0e0e0;
$gray-400: #bdbdbd;
$gray-500: #9e9e9e;
$gray-600: #757575;
$gray-700: #616161;
$gray-800: #424242;
$gray-900: #212121;

$grays: (); // !default
// stylelint-disable-next-line scss/dollar-variable-default
$grays: map-merge(
  (
    "50":  $gray-50,
    "100": $gray-100,
    "200": $gray-200,
    "300": $gray-300,
    "400": $gray-400,
    "500": $gray-500,
    "600": $gray-600,
    "700": $gray-700,
    "800": $gray-800,
    "900": $gray-900
  ),
  $grays
);

$base:             #005bf7;
$success-green:    #00bb00;
$danger-red:       #ff0000;
$warning-yellow:   #fbc02d;
$info-blue:        #1e90ff;
$white:            #fff;    // !default
$black:            #000;    // !default
$navy-50:  #f4f5f7;
$navy-100: #dfe1e6;
$navy-200: #b3bac5;
$navy-300: #97a0af;
$navy-400: #7a869a;
$navy-500: #5e6c84;
$navy-600: #42526e;
$navy-700: #253858;
$navy-800: #091e42;
$navy-900: #03122c;
$slate-50:  #f6f7f9;
$slate-100: #d8dce4;
$slate-200: #bac0cf;
$slate-300: #9ca5ba;
$slate-400: #7e8aa5;
$slate-500: #63708d;
$slate-600: #4e586f;
$slate-700: #394051;
$slate-800: #242933;
$slate-900: #0f1115;
$polo-gray-50:  #a5acb6;
$polo-gray-100: #939aa7;
$polo-gray-200: #808998;
$polo-gray-300: #6e7888;
$polo-gray-400: #5f6775;
$polo-gray-500: #505762;
$polo-gray-600: #404650;
$polo-gray-700: #31363d;
$polo-gray-800: #22252a;
$polo-gray-900: #131417;
$midnight-50:  #ebeced;
$midnight-100: #c5c7ca;
$midnight-200: #9fa1a8;
$midnight-300: #787c85;
$midnight-400: #525762;
$midnight-500: #2c3240;
$midnight-600: #252935;
$midnight-700: #1d2029;
$midnight-800: #14171e;
$midnight-900: #0c0e12;
$blue-gray-50:  #f8f9fa;
$blue-gray-100: #ecedf0;
$blue-gray-200: #dee0e5;
$blue-gray-300: #cfd3d9;
$blue-gray-400: #bfc4cc;
$blue-gray-500: #adb3be;
$blue-gray-600: #98a0ae;
$blue-gray-700: #80899a;
$blue-gray-800: #626c7e;
$blue-gray-900: #393f4a;
$blue-50:  #e5effe;
$blue-100: #c9ddfd;
$blue-200: #a9c9fc;
$blue-300: #82b1fb;
$blue-400: #5091f9;
$blue-500: #005ff7;
$blue-600: #0055de;
$blue-700: #004ac2;
$blue-800: #003da0;
$blue-900: #002b71;
$indigo-50:  #edeafe;
$indigo-100: #d8d4fd;
$indigo-200: #c1b9fc;
$indigo-300: #a599fb;
$indigo-400: #7e6dfa;
$indigo-500: #1d00f7;
$indigo-600: #1a00df;
$indigo-700: #1700c4;
$indigo-800: #1300a3;
$indigo-900: #0d0075;
$violet-50:  #f6e9fe;
$violet-100: #ecd1fd;
$violet-200: #e1b6fc;
$violet-300: #d394fb;
$violet-400: #c166fa;
$violet-500: #9800f7;
$violet-600: #8900df;
$violet-700: #7800c4;
$violet-800: #6400a2;
$violet-900: #480075;
$fuschia-50:  #feeafc;
$fuschia-100: #fdd4f8;
$fuschia-200: #fcb9f4;
$fuschia-300: #fb99f0;
$fuschia-400: #fa6de9;
$fuschia-500: #f700da;
$fuschia-600: #df00c5;
$fuschia-700: #c400ad;
$fuschia-800: #a40090;
$fuschia-900: #770069;
$pink-50:  #feeaf2;
$pink-100: #fdd3e3;
$pink-200: #fcb9d3;
$pink-300: #fb98be;
$pink-400: #fa6ca2;
$pink-500: #f7005f;
$pink-600: #df0056;
$pink-700: #c4004b;
$pink-800: #a3003f;
$pink-900: #77002d;
$red-50:  #feebe9;
$red-100: #fdd5d0;
$red-200: #fcbcb4;
$red-300: #fb9d91;
$red-400: #fa7462;
$red-500: #f71d00;
$red-600: #df1a00;
$red-700: #c41700;
$red-800: #a31300;
$red-900: #750d00;
$orange-50:  #fef2e0;
$orange-100: #fce5be;
$orange-200: #fbd699;
$orange-300: #fac46f;
$orange-400: #f8b03d;
$orange-500: #f79800;
$orange-600: #df8900;
$orange-700: #c47800;
$orange-800: #a26400;
$orange-900: #754800;
$yellow-50:  #fafee2;
$yellow-100: #f6fdc1;
$yellow-200: #f0fb9d;
$yellow-300: #eafa73;
$yellow-400: #e3f940;
$yellow-500: #daf700;
$yellow-600: #c5df00;
$yellow-700: #adc400;
$yellow-800: #90a400;
$yellow-900: #697700;
$lime-50:  #eefee4;
$lime-100: #dbfdc6;
$lime-200: #c6fca4;
$lime-300: #adfa7c;
$lime-400: #8df949;
$lime-500: #5ff700;
$lime-600: #56df00;
$lime-700: #4bc400;
$lime-800: #3fa300;
$lime-900: #2d7700;
$green-50:  #e9feeb;
$green-100: #d0fdd5;
$green-200: #b3fcbc;
$green-300: #90fb9d;
$green-400: #60fa72;
$green-500: #00f71d;
$green-600: #00df1a;
$green-700: #00c417;
$green-800: #00a413;
$green-900: #00770e;
$teal-50:  #e7fef5;
$teal-100: #cdfdeb;
$teal-200: #affcde;
$teal-300: #8afbcf;
$teal-400: #58f9bb;
$teal-500: #00f798;
$teal-600: #00df89;
$teal-700: #00c479;
$teal-800: #00a464;
$teal-900: #007749;
$cyan-50:  #e4fbfe;
$cyan-100: #c6f6fd;
$cyan-200: #a4f1fc;
$cyan-300: #7cecfa;
$cyan-400: #48e4f9;
$cyan-500: #00daf7;
$cyan-600: #00c5df;
$cyan-700: #00adc4;
$cyan-800: #0090a3;
$cyan-900: #006876;
$material-red-500:          #f44336;
$material-red-600:          #e53935;
$material-pink-500:         #e91e63;
$material-pink-600:         #d81b60;
$material-purple-500:       #9c27b0;
$material-purple-600:       #8e24aa;
$material-deep-purple-500:  #673ab7;
$material-deep-purple-600:  #5e35b1;
$material-indigo-500:       #3f51b5;
$material-indigo-600:       #3949ab;
$material-blue-500:         #2196f3;
$material-blue-600:         #1e88e5;
$material-light-blue-500:   #03a9f4;
$material-light-blue-600:   #039be5;
$material-cyan-500:         #00bcd4;
$material-cyan-600:         #00acc1;
$material-teal-500:         #009688;
$material-teal-600:         #00897b;
$material-green-500:        #4caf50;
$material-green-600:        #43a047;
$material-light-green-500:  #8bc34a;
$material-light-green-600:  #7cb342;
$material-lime-500:         #cddc39;
$material-lime-600:         #c0ca33;
$material-yellow-500:       #ffeb3b;
$material-yellow-600:       #fdd835;
$material-amber-500:        #ffc107;
$material-amber-600:        #ffb300;
$material-orange-500:       #ff9800;
$material-orange-600:       #fb8c00;
$material-deep-orange-500:  #ff5722;
$material-deep-orange-600:  #f4511e;
$material-brown-500:        #795548;
$material-brown-600:        #6d4c41;
$material-blue-gray-500:    #607d8b;
$material-blue-gray-600:    #546e7a;

$colors: (); // !default
// stylelint-disable-next-line scss/dollar-variable-default
$colors: map-merge(
  (
    "base":                      $base,
    "success-green":             $success-green,
    "danger-red":                $danger-red,
    "warning-yellow":            $warning-yellow,
    "info-blue":                 $info-blue,
    "white":                     $white,
    "black":                     $black,
    "navy-50":                   $navy-50,
    "navy-100":                  $navy-100,
    "navy-200":                  $navy-200,
    "navy-300":                  $navy-300,
    "navy-400":                  $navy-400,
    "navy-500":                  $navy-500,
    "navy-600":                  $navy-600,
    "navy-700":                  $navy-700,
    "navy-800":                  $navy-800,
    "navy-900":                  $navy-900,
    "slate-50":                  $slate-50,
    "slate-100":                 $slate-100,
    "slate-200":                 $slate-200,
    "slate-300":                 $slate-300,
    "slate-400":                 $slate-400,
    "slate-500":                 $slate-500,
    "slate-600":                 $slate-600,
    "slate-700":                 $slate-700,
    "slate-800":                 $slate-800,
    "slate-900":                 $slate-900,
    "polo-gray-50":              $polo-gray-50,
    "polo-gray-100":             $polo-gray-100,
    "polo-gray-200":             $polo-gray-200,
    "polo-gray-300":             $polo-gray-300,
    "polo-gray-400":             $polo-gray-400,
    "polo-gray-500":             $polo-gray-500,
    "polo-gray-600":             $polo-gray-600,
    "polo-gray-700":             $polo-gray-700,
    "polo-gray-800":             $polo-gray-800,
    "polo-gray-900":             $polo-gray-900,
    "midnight-50":               $midnight-50,
    "midnight-100":              $midnight-100,
    "midnight-200":              $midnight-200,
    "midnight-300":              $midnight-300,
    "midnight-400":              $midnight-400,
    "midnight-500":              $midnight-500,
    "midnight-600":              $midnight-600,
    "midnight-700":              $midnight-700,
    "midnight-800":              $midnight-800,
    "midnight-900":              $midnight-900,
    "blue-gray-50":              $blue-gray-50,
    "blue-gray-100":             $blue-gray-100,
    "blue-gray-200":             $blue-gray-200,
    "blue-gray-300":             $blue-gray-300,
    "blue-gray-400":             $blue-gray-400,
    "blue-gray-500":             $blue-gray-500,
    "blue-gray-600":             $blue-gray-600,
    "blue-gray-700":             $blue-gray-700,
    "blue-gray-800":             $blue-gray-800,
    "blue-gray-900":             $blue-gray-900,
    "blue-50":                   $blue-50,
    "blue-100":                  $blue-100,
    "blue-200":                  $blue-200,
    "blue-300":                  $blue-300,
    "blue-400":                  $blue-400,
    "blue-500":                  $blue-500,
    "blue-600":                  $blue-600,
    "blue-700":                  $blue-700,
    "blue-800":                  $blue-800,
    "blue-900":                  $blue-900,
    "indigo-50":                 $indigo-50,
    "indigo-100":                $indigo-100,
    "indigo-200":                $indigo-200,
    "indigo-300":                $indigo-300,
    "indigo-400":                $indigo-400,
    "indigo-500":                $indigo-500,
    "indigo-600":                $indigo-600,
    "indigo-700":                $indigo-700,
    "indigo-800":                $indigo-800,
    "indigo-900":                $indigo-900,
    "violet-50":                 $violet-50,
    "violet-100":                $violet-100,
    "violet-200":                $violet-200,
    "violet-300":                $violet-300,
    "violet-400":                $violet-400,
    "violet-500":                $violet-500,
    "violet-600":                $violet-600,
    "violet-700":                $violet-700,
    "violet-800":                $violet-800,
    "violet-900":                $violet-900,
    "fuschia-50":                $fuschia-50,
    "fuschia-100":               $fuschia-100,
    "fuschia-200":               $fuschia-200,
    "fuschia-300":               $fuschia-300,
    "fuschia-400":               $fuschia-400,
    "fuschia-500":               $fuschia-500,
    "fuschia-600":               $fuschia-600,
    "fuschia-700":               $fuschia-700,
    "fuschia-800":               $fuschia-800,
    "fuschia-900":               $fuschia-900,
    "pink-50":                   $pink-50,
    "pink-100":                  $pink-100,
    "pink-200":                  $pink-200,
    "pink-300":                  $pink-300,
    "pink-400":                  $pink-400,
    "pink-500":                  $pink-500,
    "pink-600":                  $pink-600,
    "pink-700":                  $pink-700,
    "pink-800":                  $pink-800,
    "pink-900":                  $pink-900,
    "red-50":                    $red-50,
    "red-100":                   $red-100,
    "red-200":                   $red-200,
    "red-300":                   $red-300,
    "red-400":                   $red-400,
    "red-500":                   $red-500,
    "red-600":                   $red-600,
    "red-700":                   $red-700,
    "red-800":                   $red-800,
    "red-900":                   $red-900,
    "orange-50":                 $orange-50,
    "orange-100":                $orange-100,
    "orange-200":                $orange-200,
    "orange-300":                $orange-300,
    "orange-400":                $orange-400,
    "orange-500":                $orange-500,
    "orange-600":                $orange-600,
    "orange-700":                $orange-700,
    "orange-800":                $orange-800,
    "orange-900":                $orange-900,
    "yellow-50":                 $yellow-50,
    "yellow-100":                $yellow-100,
    "yellow-200":                $yellow-200,
    "yellow-300":                $yellow-300,
    "yellow-400":                $yellow-400,
    "yellow-500":                $yellow-500,
    "yellow-600":                $yellow-600,
    "yellow-700":                $yellow-700,
    "yellow-800":                $yellow-800,
    "yellow-900":                $yellow-900,
    "lime-50":                   $lime-50,
    "lime-100":                  $lime-100,
    "lime-200":                  $lime-200,
    "lime-300":                  $lime-300,
    "lime-400":                  $lime-400,
    "lime-500":                  $lime-500,
    "lime-600":                  $lime-600,
    "lime-700":                  $lime-700,
    "lime-800":                  $lime-800,
    "lime-900":                  $lime-900,
    "green-50":                  $green-50,
    "green-100":                 $green-100,
    "green-200":                 $green-200,
    "green-300":                 $green-300,
    "green-400":                 $green-400,
    "green-500":                 $green-500,
    "green-600":                 $green-600,
    "green-700":                 $green-700,
    "green-800":                 $green-800,
    "green-900":                 $green-900,
    "teal-50":                   $teal-50,
    "teal-100":                  $teal-100,
    "teal-200":                  $teal-200,
    "teal-300":                  $teal-300,
    "teal-400":                  $teal-400,
    "teal-500":                  $teal-500,
    "teal-600":                  $teal-600,
    "teal-700":                  $teal-700,
    "teal-800":                  $teal-800,
    "teal-900":                  $teal-900,
    "cyan-50":                   $cyan-50,
    "cyan-100":                  $cyan-100,
    "cyan-200":                  $cyan-200,
    "cyan-300":                  $cyan-300,
    "cyan-400":                  $cyan-400,
    "cyan-500":                  $cyan-500,
    "cyan-600":                  $cyan-600,
    "cyan-700":                  $cyan-700,
    "cyan-800":                  $cyan-800,
    "cyan-900":                  $cyan-900,
    "material-red-500":          $material-red-500,
    "material-red-600":          $material-red-600,
    "material-pink-500":         $material-pink-500,
    "material-pink-600":         $material-pink-600,
    "material-purple-500":       $material-purple-500,
    "material-purple-600":       $material-purple-600,
    "material-deep-purple-500":  $material-deep-purple-500,
    "material-deep-purple-600":  $material-deep-purple-600,
    "material-indigo-500":       $material-indigo-500,
    "material-indigo-600":       $material-indigo-600,
    "material-blue-500":         $material-blue-500,
    "material-blue-600":         $material-blue-600,
    "material-light-blue-500":   $material-light-blue-500,
    "material-light-blue-600":   $material-light-blue-600,
    "material-cyan-500":         $material-cyan-500,
    "material-cyan-600":         $material-cyan-600,
    "material-teal-500":         $material-teal-500,
    "material-teal-600":         $material-teal-600,
    "material-green-500":        $material-green-500,
    "material-green-600":        $material-green-600,
    "material-light-green-500":  $material-light-green-500,
    "material-light-green-600":  $material-light-green-600,
    "material-lime-500":         $material-lime-500,
    "material-lime-600":         $material-lime-600,
    "material-yellow-500":       $material-yellow-500,
    "material-yellow-600":       $material-yellow-600,
    "material-amber-500":        $material-amber-500,
    "material-amber-600":        $material-amber-600,
    "material-orange-500":       $material-orange-500,
    "material-orange-600":       $material-orange-600,
    "material-deep-orange-500":  $material-deep-orange-500,
    "material-deep-orange-600":  $material-deep-orange-600,
    "material-brown-500":        $material-brown-500,
    "material-brown-600":        $material-brown-600,
    "material-blue-gray-500":    $material-blue-gray-500,
    "material-blue-gray-600":    $material-blue-gray-600
  ),
  $colors
);

$primary:       $base;
$secondary:     $pink-500;
$success:       $success-green;
$info:          $info-blue;
$warning:       $warning-yellow;
$danger:        $danger-red;
$light:         $gray-100; // !default
$dark:          $gray-900; // !default
$black:         $black; // Additional Meta theme color

$theme-colors: (); // !default
// stylelint-disable-next-line scss/dollar-variable-default
$theme-colors: map-merge(
  (
    "primary":    $primary,
    "secondary":  $secondary,
    "success":    $success,
    "info":       $info,
    "warning":    $warning,
    "danger":     $danger,
    "light":      $light,
    "dark":       $dark,
    "black":      $black
  ),
  $theme-colors
);

// Set a specific jump point for requesting color jumps
$theme-color-interval:      8%; // !default

// The yiq lightness value that determines when the lightness of color changes 
// from "dark" to "light". Acceptable values are between 0 and 255.
$yiq-contrasted-threshold:  150; // !default

// Customize the light and dark text colors for use in our YIQ color contrast 
// function.
$yiq-text-dark:             $gray-900; // !default
$yiq-text-light:            $white; // !default


// Spacing
//
// Control the default styling of most Bootstrap elements by modifying these
// variables. Mostly focused on spacing.
// You can add more entries to the $spacers map, should you need more variation.

$spacer: 1rem; // !default
$spacers: (); // !default
// stylelint-disable-next-line scss/dollar-variable-default
$spacers: map-merge(
  (
    0:  0,
    1:  ($spacer * .25),
    2:  ($spacer * .5),
    3:  $spacer,
    4:  ($spacer * 1.5),
    4b: ($spacer * 2),    // Custom value
    4c: ($spacer * 2.5),  // Custom value
    5:  ($spacer * 3),
    6:  ($spacer * 3.5),  // Custom value
    7:  ($spacer * 4),    // Custom value
    8:  ($spacer * 4.5),  // Custom value
    9:  ($spacer * 5),    // Custom value
    10: ($spacer * 5.5),  // Custom value
    11: ($spacer * 6),    // Custom value
    auto: auto            // Custom value
  ),
  $spacers
);


// Body
//
// Settings for the `<body>` element.

$body-bg:                   $black !default;
$body-color:                $gray-900 !default;


// Typography
//

// Base Typography

$font-size-base:                1rem; // !default
$letter-spacing:            .0.008em;
$line-height-base:               1.5; // Multiplied by the element's font-size
$font-weight-normal:             500; // default weight = Medium
$small-font-size-50:             50%; // Custom
$small-font-size-60:             60%; // Custom
$small-font-size-70:             70%; // Custom

html, body { letter-spacing: $letter-spacing; }

.small-font-size-50 { font-size: $small-font-size-50; }
.small-font-size-60 { font-size: $small-font-size-60; }
.small-font-size-70 { font-size: $small-font-size-70; }

// Links

$link-color:                $white;
$link-hover-color:          primary;
$link-hover-decoration:     none;

.underline {
  display: inline-block;
  margin-right: 4px;
  margin-left: 4px;
}

.underline:after {
  content: '';
  display: block;
  height: 2px;
  width: 100%;
  transition: width .3s ease, background-color .3s ease;
  background-color: white;
}

.underline:hover:after {
  width: 0;
  background: white;
}

// Headings
//
// Style h1, h2, h3, h4, h5, h6 elements and 
// .h1, .h2, .h3, .h4, .h5, .h6 classes.

$headings-font-weight:        700;
$headings-letter-spacing:     -0.005em;

// Display Headings
//
// Style .display-* heading classes.

$display-font-weight:         700;
$display1-weight:             $display-font-weight;
$display2-weight:             $display-font-weight;
$display3-weight:             $display-font-weight;
$display4-weight:             $display-font-weight;
$display-line-height:         1.1;

// Leads
//
// Style .lead classes.

$lead-font-weight:            400;

.lead, .lead-md, .lead-lg {
  font-weight: $lead-font-weight;
}

// Blockquotes
//
// Style blockquote elements and classes.

$blockquote-font-weight:                      400;
$blockquote-small-color:    rgba(255,255,255,0.5);

.blockquote, .blockquote-md, .blockquote-lg {
  font-weight: $blockquote-font-weight;
}

%blockquote-footer-shared {
  display: block;
  font-size: 80%;
  color: $blockquote-small-color;
  padding-bottom: 1rem;

  &::before {
    content: "\2014 \00A0"; // em dash, nbsp
  }
}

.blockquote-footer, .blockquote-footer-md, .blockquote-footer-lg {
  @extend %blockquote-footer-shared;
}

// Utilities

// Utilites > Text
//

// Contextual colors

.text-black-10 { color: rgba($black, .1) !important; }
.text-black-20 { color: rgba($black, .2) !important; }
.text-black-30 { color: rgba($black, .3) !important; }
.text-black-40 { color: rgba($black, .4) !important; }
.text-black-50 { color: rgba($black, .5) !important; }
.text-black-60 { color: rgba($black, .6) !important; }
.text-black-70 { color: rgba($black, .7) !important; }
.text-black-80 { color: rgba($black, .8) !important; }
.text-black-90 { color: rgba($black, .9) !important; }

.text-white-10 { color: rgba($white, .1) !important; }
.text-white-20 { color: rgba($white, .2) !important; }
.text-white-30 { color: rgba($white, .3) !important; }
.text-white-40 { color: rgba($white, .4) !important; }
.text-white-50 { color: rgba($white, .5) !important; }
.text-white-60 { color: rgba($white, .6) !important; }
.text-white-70 { color: rgba($white, .7) !important; }
.text-white-80 { color: rgba($white, .8) !important; }
.text-white-90 { color: rgba($white, .9) !important; }


// Complex Type Scaling
//
// ALL VALUES: http://bit.ly/meta-scaling-typography-values
//
// Create a map of pre-defined typographic scales as found on type-scale.com. 
// These scales can be passed to the mixin that creates the font sizes by 
// using their key from the key: value pairs.
//
// After the map of scales, two variables are defined.
// $heading-type-scale-base and $display-type-scale-base, these variables hold 
// the initial scales that are used from a 0 width viewport or browser and 
// upward. These variables accept a key from the $type-scales map or can be 
// passed a unitless value.
// 
// By default Bootstraps .display-4 font size is 1rem larger than the h1.  
$type-scales: (
  minor-second: 1.067,
  major-second: 1.125,
  minor-third: 1.2,
  mid-third: 1.215,
  major-third: 1.25,
  perfect-fourth: 1.333,
  augmented-fourth: 1.414,
  perfect-fifth: 1.5,
  golden-ratio: 1.618
);

$heading-type-scale-base: major-second;
$display-type-scale-base: major-second;
$lead-type-scale-base: major-second;
$blockquote-type-scale-base: major-second;

// Variable base settings
//
// The variable base settings are set manually.
$font-size-heading-base:       1.0625rem;
$line-height-heading-base:          1.45;
$font-size-lead-base:            1.25rem;
$line-height-lead-base:             1.45;
$font-size-blockquote-base:      1.25rem;
$line-height-blockquote-base:       1.45;
$margin-top-base:                   2.15;
$margin-bottom-base:                1rem;
$paragraph-letter-spacing:             0;


// Function to Check for Valid Type Scale Value
//
// The function prevents restriction of values in the Sass map above. It 
// checks if the value passed to the mixin is one of the values in the 
// $type-scales map or it must be a unitless value to create the type scale.
@function check-type-scale-value($scale) {
  
  // Check $scale against the values in $type-scales.
  @if map-has-key($type-scales, $scale) {
    
      // If the value of $scale is defined in $type-scales, 
      // return the value of $scale.
      @return map-get($type-scales, $scale);
    
  // If the value of $scale is not defined in the $type-scales map, check if 
  // the value is a number and that the number is a unitless value.
  } @else if type-of($scale) == number and unitless($scale) {
    
    // If the value of $scale is a unitless number, return the number.
    @return $scale;
    
  // Lastly, should the value passed to $scale be neither found in the 
  // $type-scales map nor a unitless number, throw an error.
  } @else {
    
    // Sass error.
    @error "Sorry, `#{$scale}` is not a unitless number value or a pre-defined key in the $type-scales map.";
  }
}

// Mixins That Create Font Sizes
//
// Below are two mixin's that do very similar things.
// They both take a type scale value either from the $type-scales
// map or a custom unitless number.
//
// From there it uses the checkTypeScaleValue() function to 
// evaluate the $scale value and then create the font sizes.
@mixin create-heading-type-scale($scale) {
  
  // Check the $scale value and store in a variable to be 
  // used when calculating the font sizes.
  $the-heading-type-scale: check-type-scale-value($scale);
  
  // Starting from h6, multiply each previous value by the scale
  // to get the next font size
  $font-size-h6: $font-size-heading-base * $the-heading-type-scale;
  $font-size-h5: $font-size-h6 * $the-heading-type-scale;
  $font-size-h4: $font-size-h5 * $the-heading-type-scale;
  $font-size-h3: $font-size-h4 * $the-heading-type-scale;
  $font-size-h2: $font-size-h3 * $the-heading-type-scale;
  $font-size-h1: $font-size-h2 * $the-heading-type-scale;
  // $font-size-display-base is made global to allow for accessing the 
  // varibale in the next mixin.
  $font-size-display-base : $font-size-h1 !global;
  
  // Add the created font sizes and margin-top to the elements and classes
  h1, .h1 {
    font-size: $font-size-h1;
    line-height: $line-height-heading-base - .25;
    margin-bottom: $margin-bottom-base;
  }
  h2, .h2 {
    font-size: $font-size-h2;
    line-height: $line-height-heading-base - .2;
    margin-bottom: $margin-bottom-base;
  }
  h3, .h3 {
    font-size: $font-size-h3;
    line-height: $line-height-heading-base - .15;
    margin-bottom: $margin-bottom-base;
  }
  h4, .h4 {
    font-size: $font-size-h4;
    line-height: $line-height-heading-base - .1;
    margin-bottom: $margin-bottom-base;
  }
  h5, .h5 {
    font-size: $font-size-h5;
    line-height: $line-height-heading-base - .05;
    margin-bottom: $margin-bottom-base;
  }
  h6, .h6 {
    font-size: $font-size-h6;
    line-height: $line-height-heading-base; // Variable base setting
    margin-bottom: $margin-bottom-base;
  }
  .h1-editorial { margin-top: $font-size-h1 * $margin-top-base; }
  .h2-editorial { margin-top: $font-size-h2 * $margin-top-base; }
  .h3-editorial { margin-top: $font-size-h3 * $margin-top-base; }
  .h4-editorial { margin-top: $font-size-h4 * $margin-top-base; }
  .h5-editorial { margin-top: $font-size-h5 * $margin-top-base; }
  .h6-editorial { margin-top: $font-size-h6 * $margin-top-base; }
}

@mixin create-display-type-scale($scale) {

  // Store default type scale in a variable for calculations
  $the-display-type-scale: check-type-scale-value($scale);
  
  // Create variables to reference the previous font size
  $font-size-display-4: $font-size-display-base + $font-size-base;
  $font-size-display-3: $font-size-display-4 * $the-display-type-scale;
  $font-size-display-2: $font-size-display-3 * $the-display-type-scale;
  $font-size-display-1: $font-size-display-2 * $the-display-type-scale;

  $top-margin-display-editorial: $font-size-display-base * $margin-top-base;

  // Add the created font sizes to the elements and classes
  .display-4 {
    font-size: $font-size-display-4;
    margin-bottom: 1.75rem;
  }
  .display-3 {
    font-size: $font-size-display-3;
    margin-bottom: 1.75rem;
  }
  .display-2 {
    font-size: $font-size-display-2;
    margin-bottom: 1.75rem;
  }
  .display-1 {
    font-size: $font-size-display-1;
    margin-bottom: 1.75rem;
  }
  .display-4-editorial, 
  .display-3-editorial, 
  .display-2-editorial, 
  .display-1-editorial {
    margin-top: $top-margin-display-editorial;
  }
}

@mixin create-lead-type-scale($scale) {

  // Store default type scale in a variable for calculations
  $the-lead-type-scale: check-type-scale-value($scale);
  
  // Create variables to reference the previous font size
  $font-size-lead-md: $font-size-lead-base * $the-lead-type-scale;
  $font-size-lead-lg: $font-size-lead-md * $the-lead-type-scale;

  // Add the created font sizes to the elements and classes
  .lead {
    font-size: $font-size-lead-base;
    line-height: $line-height-lead-base; // Variable base setting
    margin-bottom: $margin-bottom-base;
  }
  .lead-md {
    font-size: $font-size-lead-md;
    line-height: $line-height-lead-base - .05; // Scaled down by .05
    margin-bottom: $margin-bottom-base;
  }
  .lead-lg {
    font-size: $font-size-lead-lg;
    line-height: $line-height-lead-base - .1; // Scaled down by .05
    margin-bottom: $margin-bottom-base;
  }
  .lead-editorial { margin-top: $font-size-lead-base * $margin-top-base; }
  .lead-md-editorial { margin-top: $font-size-lead-md * $margin-top-base; }
  .lead-lg-editorial { margin-top: $font-size-lead-lg * $margin-top-base; }
}

@mixin create-blockquote-type-scale($scale) {

  // Store default type scale in a variable for calculations
  $the-blockquote-type-scale: check-type-scale-value($scale);
  
  // Create variables to reference the previous font size
  $font-size-blockquote-md: $font-size-blockquote-base * $the-blockquote-type-scale;
  $font-size-blockquote-lg: $font-size-blockquote-md * $the-blockquote-type-scale;

  // Add the created font sizes to the elements and classes
  .blockquote {
    font-size: $font-size-blockquote-base;
    line-height: $line-height-blockquote-base; // Variable base setting
    margin-bottom: $margin-bottom-base;
  }
  .blockquote-md {
    font-size: $font-size-blockquote-md;
    line-height: $line-height-blockquote-base - .05; // Scaled down by .05
    margin-bottom: $margin-bottom-base;
  }
  .blockquote-lg {
    font-size: $font-size-blockquote-lg;
    line-height: $line-height-blockquote-base - .1; // Scaled down by .05
    margin-bottom: $margin-bottom-base;
  }
  .blockquote-editorial 
  { margin-top: $font-size-blockquote-base * $margin-top-base; }
  .blockquote-md-editorial
  { margin-top: $font-size-blockquote-md * $margin-top-base; }
  .blockquote-lg-editorial 
  { margin-top: $font-size-blockquote-lg * $margin-top-base; }
}

// The base heading and display font sizes to be used from 0px width viewports 
// and up. These can be adjusted through the use of media queries by simply 
// using the mixin again at your desired breakpoint
//
// Set the root font size in px on the html element to 14px, so that it is 2px 
// lower that the aprox default for browsers. Then the font size is bumped up 
// 2px at the md and then lg breakpoints.
html, body {
  
  // Base values
  font-size: 15px;
  line-height: 1.75;
  
  p {
    letter-spacing: $paragraph-letter-spacing;
  }

  @media (min-width: 768px) {
    font-size: 16px;
  }

  @media (min-width: 992px) {
    font-size: 17px;
  }

}

// Define the heading and display font sizes
@include create-heading-type-scale($heading-type-scale-base);
@include create-display-type-scale($display-type-scale-base);
@include create-lead-type-scale($lead-type-scale-base);
@include create-blockquote-type-scale($blockquote-type-scale-base);

// At the Bootstrap md breakpoint, adjust the heading dont sizes.
@media (min-width: 992px) {
  @include create-heading-type-scale(minor-third);
  @include create-display-type-scale(minor-third);
  @include create-lead-type-scale(minor-third);
  @include create-blockquote-type-scale(minor-third);
}
